# -*- coding: utf-8 -*-
"""Mergesort.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IP-tloQ8o5frhR3dJTnEMcN9UjpOryb6
"""

def divide(a,start,end):
  if start<end:
   mid=(start+(end-1)//2)
   divide(a,start,mid)
   divide(a,mid+1,end)
   merge(a,start,mid,end)

def merge(a,start,mid,end):
 n1 = mid-start+1
 n2 = end-mid
 L=[0]*(n1)
 R=[0]*(n2) 
 for i in range (0,n1):
      L[i]=a[start+i]

 for j in range(0,n2):
    R[j]=a[mid+1+j]
 i=0
 j=0
 k=start
  
 while i < n1 and j < n2:
    if L[i] <= R[j]:
      a[k]=L[i]
      i += 1
    else:
      a[k]=L[i]
      i+=1
      k+=1
    while i < n1:
      a[k]=L[i]
      i += 1
      k += 1
    while j < n2:
      a[k]=R[j]
      j += 1
      k += 1
num=list(map(int,input().split()))
n=len(num)
divide(num,0,n-1)
for I in range(len(num)):
  print(num[I])